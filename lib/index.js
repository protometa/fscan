// Generated by CoffeeScript 1.7.1
(function() {
  var async, fp, fs, fsdb, g, scan,
    __slice = [].slice;

  fs = require('fs');

  fp = require('path');

  async = require('async');

  g = require('glob');

  scan = function(files, match, found) {
    return async.eachSeries(files, function(file, done) {
      return match(file, function(err, matched) {
        var res, stop;
        if (err) {
          return done(err);
        }
        if (matched) {
          res = matched === true ? file : matched;
          stop = !found(null, res);
        }
        return done(stop);
      });
    }, function(err) {
      if (err !== true) {
        return found(err);
      }
    });
  };

  fsdb = {
    find: function() {
      var cb, dir, match, mode, _arg, _i;
      _arg = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), cb = arguments[_i++];
      dir = _arg[0], match = _arg[1], mode = _arg[2];
      if (dir == null) {
        dir = './';
      }
      if (match == null) {
        match = (function() {
          return true;
        });
      }
      return mode != null ? mode : mode = 'lazy';
    },
    findOne: function() {
      var cb, glob, match, _arg, _i;
      glob = arguments[0], _arg = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), cb = arguments[_i++];
      match = _arg[0];
      return g(glob, function(err, files) {
        if (err) {
          return cb(err);
        }
        if (match == null) {
          return cb(null, files[0]);
        }
        return scan(files, match, function(err, doc) {
          cb(err, doc);
          return false;
        });
      });
    },
    findAll: function() {
      var cb, glob, match, _arg, _i;
      glob = arguments[0], _arg = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), cb = arguments[_i++];
      match = _arg[0];
      return g(glob, function(err, files) {
        var res;
        if (err) {
          return cb(err);
        }
        if (match == null) {
          return cb(null, files);
        }
        res = [];
        return scan(files, match, function(err, doc) {
          if (err) {
            cb(err);
            return false;
          }
          if (doc != null) {
            return res.push(doc);
          } else {
            return cb(null, res);
          }
        });
      });
    }
  };

  module.exports = fsdb;

}).call(this);
